{"version":3,"file":"static/js/369.d43b8a0e.chunk.js","mappings":"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","sources":["webpack://rs-chat/./src/view/main/style.module.css?ec25","webpack://rs-chat/./src/view/main/header/style.module.css?7063","view/main/header/header.tsx","webpack://rs-chat/./src/view/main/footer/style.module.css?2100","view/main/footer/footer.tsx","webpack://rs-chat/./src/view/main/contacts/style.module.css?21a7","webpack://rs-chat/./src/view/main/contacts/user-contact/style.module.css?6746","view/main/contacts/user-contact/user-contact.tsx","webpack://rs-chat/./src/view/main/contacts/user-list/style.module.css?ab07","view/main/contacts/user-list/user-list.tsx","view/main/contacts/contacts.tsx","webpack://rs-chat/./src/view/main/dialog/dialog-content/style.module.css?0f15","webpack://rs-chat/./src/view/main/dialog/dialog-message/style.module.css?01e7","view/main/dialog/dialog-message/dialog-message.tsx","core/services/set-readed.ts","webpack://rs-chat/./src/view/shared/context-menu/style.module.css?7e8d","view/shared/context-menu/context-menu.tsx","view/main/dialog/dialog-content/dialog-content.tsx","webpack://rs-chat/./src/view/main/dialog/dialog-header/style.module.css?839b","view/main/dialog/dialog-header/dialog-header.tsx","webpack://rs-chat/./src/view/main/dialog/dialog-input/style.module.css?69d3","view/main/dialog/dialog-input/dialog-input.tsx","webpack://rs-chat/./src/view/main/dialog/style.module.css?39c3","view/main/dialog/dialog.tsx","webpack://rs-chat/./src/view/main/content/style.module.css?1419","view/main/content/content.tsx","view/main/Main.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"style_main__16KWY\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"style_header__PlMnG\",\"content-wrapper\":\"style_content-wrapper__Ze6I4\"};","import { useSelector } from 'react-redux';\nimport { UserActions } from '../../../store/constants/action-constants';\nimport {\n  AuthCallback,\n  useAuthorization,\n} from '../../custom-hook/use-authorization';\nimport Button from '../../shared/button/Button';\nimport style from './style.module.css';\nimport { RootState, store } from '../../../store/store';\nimport { useNavigate } from 'react-router-dom';\nimport { logout } from '../../../store/actions/user-actions';\n\nexport const Header: React.FC = () => {\n  const headerText = 'RS-Chat';\n  const userText = 'Пользователь: ';\n  const buttonText = 'Выход';\n\n  const user = useSelector((store: RootState) => store.users.userCurrent);\n  const navigate = useNavigate();\n\n  const authCallback: AuthCallback = {\n    pending: () => {},\n    fullfilled: () => {\n      store.dispatch(logout(user));\n      navigate('/login');\n    },\n    rejected: () => {},\n  };\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [messageResult, authSendHandler, reset] = useAuthorization(\n    user,\n    UserActions.LOGOUT,\n    authCallback\n  );\n\n  return (\n    <section className={style.header}>\n      <article className={style['content-wrapper']}>\n        <label>{`${userText}${user.login}`}</label>\n        <label>{headerText}</label>\n      </article>\n      <Button text={buttonText} callback={authSendHandler} small={true} />\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"footer\":\"style_footer__ULGny\"};","import style from './style.module.css';\n\nexport const Footer: React.FC = () => {\n  return (\n    <section className={style.footer}>\n      <label>RSSchool</label>\n      <label>MikAleinik</label>\n      <label>2023</label>\n    </section>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"style_contacts__HfViV\",\"search\":\"style_search__SEAlv\"};","// extracted by mini-css-extract-plugin\nexport default {\"user-contact-container\":\"style_user-contact-container__W+gz4\",\"user-status\":\"style_user-status__vBNSG\",\"active\":\"style_active__qWs-k\",\"user-login\":\"style_user-login__aILzc\",\"user-messages\":\"style_user-messages__TRTGI\"};","import { unSelectMessage } from '../../../../store/actions/dialog-actions';\r\nimport { selectUser } from '../../../../store/actions/user-actions';\r\nimport { store } from '../../../../store/store';\r\nimport style from './style.module.css';\r\nimport React from 'react';\r\n\r\ntype UserContactProps = {\r\n  login: string;\r\n  active: boolean;\r\n  messages: number;\r\n};\r\n\r\nexport const UserContact: React.FC<UserContactProps> = ({\r\n  login,\r\n  active,\r\n  messages = 0,\r\n}) => {\r\n  const clickHandler = () => {\r\n    let userSelected = store\r\n      .getState()\r\n      .users.usersAnother.active.filter((user) => user.login === login);\r\n    if (userSelected.length === 1) {\r\n      store.dispatch(selectUser(userSelected[0]));\r\n      store.dispatch(unSelectMessage());\r\n    } else {\r\n      userSelected = store\r\n        .getState()\r\n        .users.usersAnother.inactive.filter((user) => user.login === login);\r\n      store.dispatch(selectUser(userSelected[0]));\r\n      store.dispatch(unSelectMessage());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className={style['user-contact-container']} onClick={clickHandler}>\r\n      <div\r\n        className={\r\n          active\r\n            ? `${style['user-status']} ${style['active']}`\r\n            : style['user-status']\r\n        }\r\n      ></div>\r\n      <label className={style['user-login']}>{login}</label>\r\n      {messages !== 0 && (\r\n        <label className={style['user-messages']}>{messages}</label>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user-list\":\"style_user-list__ZzQiZ\"};","import { useSelector } from 'react-redux';\nimport { RootState } from '../../../../store/store';\nimport { UserContact } from '../user-contact/user-contact';\nimport style from './style.module.css';\nimport React from 'react';\nimport { Dialog } from '../../../../store/actions/dialog-actions';\n\ntype UserListSearch = {\n  search: string;\n};\n\nconst getCountMessage = (login: string, dialogs: Dialog[]): number => {\n  let result = 0;\n\n  dialogs.forEach((dialog) => {\n    if (dialog.login === login && Array.isArray(dialog.messages)) {\n      dialog.messages.forEach((message) => {\n        if (message.from === login && message.status.isReaded === false) {\n          result += 1;\n        }\n      });\n    }\n  });\n\n  return result;\n};\n\nexport const UserList: React.FC<UserListSearch> = ({ search }) => {\n  const usersCurrent = useSelector(\n    (store: RootState) => store.users.userCurrent.login\n  );\n  const usersActive = useSelector(\n    (store: RootState) => store.users.usersAnother.active\n  );\n  const usersInActive = useSelector(\n    (store: RootState) => store.users.usersAnother.inactive\n  );\n  const dialogs = useSelector((store: RootState) => store.dialogs.messages);\n\n  return (\n    <ul className={style['user-list']}>\n      {usersActive?.map(\n        (user, index) =>\n          user.login !== usersCurrent &&\n          user.login?.indexOf(search) !== -1 && (\n            <UserContact\n              login={user.login || ''}\n              active={true}\n              messages={getCountMessage(user.login || '', dialogs)}\n              key={index}\n            />\n          )\n      )}\n      {usersInActive?.map(\n        (user, index) =>\n          user.login?.indexOf(search) !== -1 && (\n            <UserContact\n              login={user.login || ''}\n              active={false}\n              messages={getCountMessage(user.login || '', dialogs)}\n              key={index}\n            />\n          )\n      )}\n    </ul>\n  );\n};\n","import { useState } from 'react';\r\nimport style from './style.module.css';\r\nimport { UserList } from './user-list/user-list';\r\n\r\nexport const Contacts: React.FC = () => {\r\n  const placeholderText = 'Поиск...';\r\n\r\n  const [search, setSearch] = useState('');\r\n  const searchHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    setSearch(event.currentTarget.value);\r\n  }\r\n\r\n  return (\r\n    <aside className={style.contacts}>\r\n      <input className={style.search} placeholder={placeholderText} onKeyUp={searchHandler}></input>\r\n      <UserList search={search}/>\r\n    </aside>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog-content\":\"style_dialog-content__ICg9o\",\"info\":\"style_info__EqnC0\",\"history-delimier\":\"style_history-delimier__TMeq1\",\"delimier-text\":\"style_delimier-text__uBNhs\"};","// extracted by mini-css-extract-plugin\nexport default {\"message-container\":\"style_message-container__Tflpy\",\"current\":\"style_current__fYex7\",\"another\":\"style_another__1ZVqf\",\"message\":\"style_message__vtYZd\",\"header\":\"style_header__XYwMV\",\"text\":\"style_text__yn2vV\",\"footer\":\"style_footer__4XVvj\"};","import { useSelector } from 'react-redux';\r\nimport { Message } from '../../../../store/actions/dialog-actions';\r\nimport { RootState } from '../../../../store/store';\r\nimport style from './style.module.css';\r\nimport React from 'react';\r\n\r\ntype DialogMessageProps = {\r\n  message: Message;\r\n  innerRef?: React.RefObject<HTMLDivElement>;\r\n  menuCallback?: (\r\n    event: React.MouseEvent | React.TouchEvent,\r\n    idMessage: string\r\n  ) => void;\r\n};\r\n\r\nconst getStatus = (isDelivered: boolean, isReaded: boolean): string => {\r\n  const textSended = 'Отправлено';\r\n  const textDelivered = 'Доставлено';\r\n  const textReaded = 'Прочитано';\r\n\r\n  if (isReaded) {\r\n    return textReaded.toLowerCase();\r\n  }\r\n  if (isDelivered) {\r\n    return textDelivered.toLowerCase();\r\n  }\r\n\r\n  return textSended.toLowerCase();\r\n};\r\n\r\nexport const DialogMessage: React.FC<DialogMessageProps> = ({\r\n  message,\r\n  innerRef,\r\n  menuCallback,\r\n}) => {\r\n  const currentUserText = 'вы';\r\n  const textEdited = 'Изменено';\r\n\r\n  const currentUser = useSelector(\r\n    (state: RootState) => state.users.userCurrent.login\r\n  );\r\n\r\n  const clickMenuHandler = (event: React.MouseEvent | React.TouchEvent) => {\r\n    if (typeof menuCallback === 'function' && currentUser === message.from) {\r\n      menuCallback(event, message.id || '');\r\n    } else {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      className={\r\n        currentUser === message.from\r\n          ? `${style['message-container']} ${style.current}`\r\n          : `${style['message-container']} ${style.another}`\r\n      }\r\n      onContextMenu={clickMenuHandler}\r\n      onTouchEnd={clickMenuHandler}\r\n    >\r\n      <div className={style.message}>\r\n        <div className={style.header}>\r\n          <label>\r\n            {message.from === currentUser ? currentUserText : message.from}\r\n          </label>\r\n          <label>{new Date(message.datetime).toLocaleString()}</label>\r\n        </div>\r\n        <div className={style.text}>{message.text}</div>\r\n        <div className={style.footer}>\r\n          <label>{message.status.isEdited ? textEdited : ''}</label>\r\n          <label>\r\n            {currentUser === message.from &&\r\n              getStatus(message.status.isDelivered, message.status.isReaded)}\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { DialogActions } from '../../store/constants/action-constants';\nimport { store } from '../../store/store';\nimport { sendMessage } from './send-message';\n\nexport const setReaded = () => {\n  const state = store.getState();\n  const selectedDialog = state.dialogs.messages.filter(\n    (dialog) => dialog.login === state.users.userSelected.login\n  )[0];\n  if (selectedDialog) {\n    selectedDialog.messages.forEach((message) => {\n      if (\n        !message.status.isReaded &&\n        message.from !== state.users.userCurrent.login\n      ) {\n        const payload = {\n          message: {\n            id: message.id,\n          },\n        };\n        sendMessage(DialogActions.MSG_READED, payload);\n      }\n    });\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"context-menu\":\"style_context-menu__PLv35\",\"context-menu_item\":\"style_context-menu_item__xM1vU\"};","import style from './style.module.css';\n\nexport type ContextMenuItem = {\n  name: string;\n  callback: (id: string) => void;\n};\n\nexport type ContextMenuProps = {\n  event: React.MouseEvent | React.TouchEvent;\n  id: string;\n  items: ContextMenuItem[];\n};\n\nexport const ContextMenu: React.FC<ContextMenuProps> = ({\n  event,\n  id,\n  items,\n}) => {\n  event.preventDefault();\n  const target = event.nativeEvent.target as HTMLDivElement;\n  const position = {\n    top: target.parentElement?.offsetTop || 0,\n  };\n\n  return (\n    <ul className={style['context-menu']} style={position}>\n      {items.map((item, index) => (\n        <li\n          className={style['context-menu_item']}\n          onClick={item.callback.bind(this, id)}\n          key={index}\n        >\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport style from './style.module.css';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { RootState, store } from '../../../../store/store';\nimport {\n  Dialog,\n  Message,\n  selectMessage,\n} from '../../../../store/actions/dialog-actions';\nimport { DialogMessage } from '../dialog-message/dialog-message';\nimport { setReaded } from '../../../../core/services/set-readed';\nimport {\n  ContextMenu,\n  ContextMenuItem,\n  ContextMenuProps,\n} from '../../../shared/context-menu/context-menu';\nimport { DialogActions } from '../../../../store/constants/action-constants';\nimport { sendMessage } from '../../../../core/services/send-message';\n\nconst getDialog = (login: string | null, dialogs: Dialog[]): Message[] => {\n  const result: Message[] = [];\n  dialogs.forEach((dialog) => {\n    if (dialog.login === login) {\n      result.push(...dialog.messages);\n    }\n  });\n  return result;\n};\n\nconst setScrollNewRef = (\n  ref: React.RefObject<HTMLDivElement>,\n  selectedUser: string | null,\n  message: Message,\n  index: number\n): React.RefObject<HTMLDivElement> | undefined => {\n  if (index === 0 && message.from === selectedUser) {\n    return ref;\n  }\n  if (message.from !== selectedUser) {\n    return ref;\n  }\n  return undefined;\n};\n\nexport const DialogContent: React.FC = () => {\n  const emptyHistoryText = 'Напишите ваше первое сообщение...';\n  const newHistoryText = 'Новые сообщения';\n  const selectUserText = 'Выберите пользователя для отправки сообщения...';\n\n  const selectedUser = useSelector(\n    (state: RootState) => state.users.userSelected.login\n  );\n  const dialogs = useSelector((store: RootState) => store.dialogs.messages);\n\n  const [oldDialogHistory, setOldDialogHistory] = useState(\n    new Array<Message>()\n  );\n  const [newDialogHistory, setNewDialogHistory] = useState(\n    new Array<Message>()\n  );\n  const [isShowDelimier, setShowDelimier] = useState(false);\n\n  useEffect(() => {\n    const currentDialog = getDialog(selectedUser, dialogs);\n    const oldMessages = currentDialog.filter(\n      (message) => message.status.isReaded !== false\n    );\n    const newMessages = currentDialog.filter(\n      (message) => message.status.isReaded === false\n    );\n    setOldDialogHistory(oldMessages);\n    setNewDialogHistory(newMessages);\n\n    if (newMessages.length > 0 && newMessages[0].from === selectedUser) {\n      setShowDelimier(true);\n    } else {\n      setShowDelimier(false);\n    }\n  }, [dialogs, selectedUser]);\n\n  const scrollNewRef = useRef<HTMLDivElement>(null);\n  const scrollOldRef = useRef<HTMLDivElement>(null);\n  const delimierRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (isShowDelimier) {\n      delimierRef.current?.scrollIntoView({ behavior: 'smooth' });\n    } else if (newDialogHistory.length > 0) {\n      scrollNewRef.current?.scrollIntoView({ behavior: 'smooth' });\n    } else {\n      scrollOldRef.current?.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [\n    isShowDelimier,\n    delimierRef,\n    scrollNewRef,\n    scrollOldRef,\n    newDialogHistory,\n    oldDialogHistory,\n  ]);\n\n  const [contextMenu, setContextMenu] = useState<ContextMenuProps | null>(null);\n  const menuSelectHandler = (\n    id: string,\n    action: DialogActions.MSG_DELETE | DialogActions.SELECT_MESSAGE\n  ) => {\n    if (action === DialogActions.MSG_DELETE) {\n      const payload = {\n        message: {\n          id: id,\n        },\n      };\n      sendMessage(DialogActions.MSG_DELETE, payload);\n    }\n    if (action === DialogActions.SELECT_MESSAGE) {\n      store.dispatch(selectMessage(id));\n    }\n    setContextMenu(null);\n  };\n  const contextMenuItems: ContextMenuItem[] = [\n    {\n      name: 'Изменить',\n      callback: (id) =>\n        menuSelectHandler.bind(this, id, DialogActions.SELECT_MESSAGE)(),\n    },\n    {\n      name: 'Удалить',\n      callback: (id) =>\n        menuSelectHandler.bind(this, id, DialogActions.MSG_DELETE)(),\n    },\n  ];\n  const contextMenuHandler = (\n    event: React.MouseEvent | React.TouchEvent,\n    idMessage: string\n  ) => {\n    const contextMenu: ContextMenuProps = {\n      event: event,\n      id: idMessage,\n      items: contextMenuItems,\n    };\n    event.currentTarget.scrollIntoView({ behavior: 'smooth', block: 'end' });\n    setContextMenu(contextMenu);\n  };\n  useEffect(() => {\n    document.addEventListener('click', () => setContextMenu(null));\n  });\n  return (\n    <article\n      className={style['dialog-content']}\n      onClick={setReaded}\n      onWheel={setReaded}\n      ref={delimierRef}\n    >\n      {selectedUser === null && (\n        <label className={style.info}>{selectUserText}</label>\n      )}\n      {selectedUser !== null &&\n        oldDialogHistory.length === 0 &&\n        newDialogHistory.length === 0 && (\n          <label className={style.info}>{emptyHistoryText}</label>\n        )}\n      {oldDialogHistory.map((message) => (\n        <DialogMessage\n          message={message}\n          key={message.id}\n          innerRef={scrollOldRef}\n          menuCallback={contextMenuHandler}\n        />\n      ))}\n      {isShowDelimier && (\n        <div className={style['history-delimier']} ref={delimierRef}>\n          <label className={style['delimier-text']}>{newHistoryText}</label>\n        </div>\n      )}\n      {newDialogHistory.map((message, index) => (\n        <DialogMessage\n          message={message}\n          key={message.id}\n          innerRef={setScrollNewRef(scrollNewRef, selectedUser, message, index)}\n          menuCallback={contextMenuHandler}\n        />\n      ))}\n      {contextMenu !== null && <ContextMenu {...contextMenu} />}\n    </article>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog-header\":\"style_dialog-header__XLReP\",\"user-active\":\"style_user-active__0VIus\",\"user-inactive\":\"style_user-inactive__h1zHf\"};","import { useSelector } from 'react-redux';\r\nimport style from './style.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RootState } from '../../../../store/store';\r\n\r\nexport const DialogHeader: React.FC = () => {\r\n  const textActive = 'в сети';\r\n  const textInActive = 'не в сети';\r\n\r\n  const activeUser = useSelector(\r\n    (store: RootState) => store.users.usersAnother.active\r\n  );\r\n\r\n  const selectedUser = useSelector(\r\n    (store: RootState) => store.users.userSelected.login\r\n  );\r\n  const [active, setActive] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (activeUser) {\r\n      const isActive = activeUser.some((user) => user.login === selectedUser);\r\n      setActive(isActive);\r\n    }\r\n  }, [activeUser, selectedUser]);\r\n\r\n  return (\r\n    <article className={style['dialog-header']}>\r\n      <label>{selectedUser}</label>\r\n      {selectedUser && (\r\n        <label\r\n          className={active ? style['user-active'] : style['user-inactive']}\r\n        >\r\n          {active ? textActive : textInActive}\r\n        </label>\r\n      )}\r\n    </article>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog-input\":\"style_dialog-input__Y-F0x\",\"dialog-input-field\":\"style_dialog-input-field__3RzOS\",\"dialog-input-cancel\":\"style_dialog-input-cancel__Hl7zD\",\"dialog-input-button\":\"style_dialog-input-button__32VBc\"};","import { useSelector } from 'react-redux';\r\nimport { sendMessage } from '../../../../core/services/send-message';\r\nimport Button from '../../../shared/button/Button';\r\nimport style from './style.module.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { RootState, store } from '../../../../store/store';\r\nimport { DialogActions } from '../../../../store/constants/action-constants';\r\nimport { setReaded } from '../../../../core/services/set-readed';\r\nimport { unSelectMessage } from '../../../../store/actions/dialog-actions';\r\n\r\nexport const DialogInput: React.FC = () => {\r\n  const buttonText = 'Отправить';\r\n  const placeholderText = 'Сообщение...';\r\n\r\n  const selectedUser = useSelector(\r\n    (store: RootState) => store.users.userSelected.login\r\n  );\r\n  const selectedMessageId: string = useSelector(\r\n    (store: RootState) => store.dialogs.messageSelected\r\n  );\r\n\r\n  useEffect(() => {\r\n    const dialogs = store.getState().dialogs.messages;\r\n    dialogs.forEach((dialog) => {\r\n      const message = dialog.messages.filter(\r\n        (message) => message.id === selectedMessageId\r\n      );\r\n      if (message.length === 1) {\r\n        setMessage(message[0].text);\r\n      }\r\n    });\r\n  }, [selectedMessageId]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setMessage(event.currentTarget.value);\r\n  };\r\n  const sendClickHandler = () => {\r\n    if (message !== '') {\r\n      if (selectedMessageId === null) {\r\n        const payload = {\r\n          message: {\r\n            to: selectedUser,\r\n            text: message,\r\n          },\r\n        };\r\n        sendMessage(DialogActions.MSG_SEND, payload);\r\n      } else {\r\n        const payload = {\r\n          message: {\r\n            id: selectedMessageId,\r\n            text: message,\r\n          },\r\n        };\r\n        sendMessage(DialogActions.MSG_EDIT, payload);\r\n      }\r\n      cancelEditHandler();\r\n      setMessage('');\r\n      setReaded();\r\n    }\r\n  };\r\n  const submitHandler = (event: React.KeyboardEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    sendClickHandler();\r\n  };\r\n  const cancelEditHandler = () => {\r\n    store.dispatch(unSelectMessage());\r\n    setMessage('');\r\n  };\r\n  return (\r\n    <form className={style['dialog-input']} onSubmit={submitHandler}>\r\n      <input\r\n        value={message}\r\n        className={style['dialog-input-field']}\r\n        placeholder={placeholderText}\r\n        onChange={inputChangeHandler}\r\n        disabled={selectedUser === null}\r\n      ></input>\r\n      {selectedMessageId !== null && (\r\n        <label\r\n          className={style['dialog-input-cancel']}\r\n          onClick={cancelEditHandler}\r\n        >\r\n          X\r\n        </label>\r\n      )}\r\n      <Button\r\n        text={buttonText}\r\n        callback={sendClickHandler}\r\n        small={true}\r\n        disabled={selectedUser === null || message === ''}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"dialog-container\":\"style_dialog-container__ZlILo\"};","import { DialogContent } from './dialog-content/dialog-content';\r\nimport { DialogHeader } from './dialog-header/dialog-header';\r\nimport { DialogInput } from './dialog-input/dialog-input';\r\nimport style from './style.module.css';\r\nimport React from 'react';\r\n\r\nexport const Dialog: React.FC = () => {\r\n  return (\r\n    <article className={style['dialog-container']}>\r\n      <DialogHeader />\r\n      <DialogContent />\r\n      <DialogInput />\r\n    </article>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"style_content__hTiAT\"};","import { Contacts } from '../contacts/contacts';\nimport { Dialog } from '../dialog/dialog';\nimport style from './style.module.css';\n\nexport const Content: React.FC = () => {\n  return (\n    <section className={style.content}>\n      <Contacts />\n      <Dialog />\n    </section>\n  );\n};\n","import style from './style.module.css';\nimport React from 'react';\nimport { Header } from './header/header';\nimport { Footer } from './footer/footer';\nimport { Content } from './content/content';\n\nconst Main: React.FC = () => {\n  return (\n    <main className={style.main}>\n      <Header />\n      <Content />\n      <Footer />\n    </main>\n  );\n};\n\nexport default Main;\n"],"names":["Header","user","useSelector","store","users","userCurrent","navigate","useNavigate","authCallback","pending","fullfilled","dispatch","logout","rejected","messageResult","authSendHandler","reset","useAuthorization","UserActions","LOGOUT","_jsxs","className","style","children","_jsx","concat","login","Button","text","callback","small","Footer","UserContact","_ref","active","messages","onClick","clickHandler","userSelected","getState","usersAnother","filter","length","selectUser","unSelectMessage","inactive","getCountMessage","dialogs","result","forEach","dialog","Array","isArray","message","from","status","isReaded","UserList","search","usersCurrent","usersActive","usersInActive","map","index","_user$login","indexOf","_user$login2","Contacts","setSearch","useState","placeholder","onKeyUp","event","currentTarget","value","DialogMessage","innerRef","menuCallback","currentUser","state","clickMenuHandler","id","preventDefault","ref","onContextMenu","onTouchEnd","Date","datetime","toLocaleString","isEdited","isDelivered","toLowerCase","getStatus","setReaded","selectedDialog","payload","sendMessage","DialogActions","MSG_READED","ContextMenu","_target$parentElement","items","position","top","nativeEvent","target","parentElement","offsetTop","item","bind","name","setScrollNewRef","selectedUser","DialogContent","oldDialogHistory","setOldDialogHistory","newDialogHistory","setNewDialogHistory","isShowDelimier","setShowDelimier","useEffect","currentDialog","getDialog","push","oldMessages","newMessages","scrollNewRef","useRef","scrollOldRef","delimierRef","_delimierRef$current","current","scrollIntoView","behavior","_scrollNewRef$current","_scrollOldRef$current","contextMenu","setContextMenu","menuSelectHandler","action","MSG_DELETE","SELECT_MESSAGE","selectMessage","contextMenuItems","contextMenuHandler","idMessage","block","document","addEventListener","onWheel","DialogHeader","activeUser","setActive","isActive","some","DialogInput","selectedMessageId","messageSelected","setMessage","sendClickHandler","to","MSG_SEND","MSG_EDIT","cancelEditHandler","onSubmit","onChange","disabled","Dialog","Content","Main"],"sourceRoot":""}